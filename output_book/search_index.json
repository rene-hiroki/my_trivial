[
["index.html", "日々の雑学 はじめに 0.1 環境", " 日々の雑学 Akiyama Hiroki 最終更新日: 2020-04-17 はじめに 作成中です hogehoge fugafuga 0.1 環境 sessionInfo() ## R version 3.6.3 (2020-02-29) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 18363) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=Japanese_Japan.932 LC_CTYPE=Japanese_Japan.932 LC_MONETARY=Japanese_Japan.932 LC_NUMERIC=C ## [5] LC_TIME=Japanese_Japan.932 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] patchwork_1.0.0 jsonlite_1.6.1 here_0.1 bookdown_0.18 forcats_0.5.0 stringr_1.4.0 dplyr_0.8.99.9002 purrr_0.3.3 ## [9] readr_1.3.1 tidyr_1.0.2 tibble_3.0.0 ggplot2_3.3.0 tidyverse_1.3.0 ## ## loaded via a namespace (and not attached): ## [1] Rcpp_1.0.4.6 lubridate_1.7.8 lattice_0.20-41 prettyunits_1.1.1 ps_1.3.2 utf8_1.1.4 ## [7] rprojroot_1.3-2 assertthat_0.2.1 digest_0.6.25 packrat_0.5.0 R6_2.4.1 cellranger_1.1.0 ## [13] backports_1.1.6 reprex_0.3.0 stats4_3.6.3 evaluate_0.14 httr_1.4.1 pillar_1.4.3 ## [19] rlang_0.4.5.9000 readxl_1.3.1 rstudioapi_0.11 callr_3.4.3 rmarkdown_2.1 labeling_0.3 ## [25] loo_2.2.0 munsell_0.5.0 broom_0.5.5 compiler_3.6.3 modelr_0.1.6 xfun_0.12 ## [31] rstan_2.19.3 pkgconfig_2.0.3 pkgbuild_1.0.6 htmltools_0.4.0 tidyselect_1.0.0 gridExtra_2.3 ## [37] matrixStats_0.56.0 fansi_0.4.1 withr_2.1.2 crayon_1.3.4 dbplyr_1.4.2 grid_3.6.3 ## [43] nlme_3.1-145 gtable_0.3.0 lifecycle_0.2.0 DBI_1.1.0 pacman_0.5.1 magrittr_1.5 ## [49] StanHeaders_2.21.0-1 scales_1.1.0 stringi_1.4.6 cli_2.0.2 farver_2.0.3 fs_1.4.1 ## [55] xml2_1.3.1 ellipsis_0.3.0 generics_0.0.2 vctrs_0.2.99.9011 tools_3.6.3 glue_1.4.0 ## [61] hms_0.5.3 rsconnect_0.8.16 processx_3.4.2 parallel_3.6.3 yaml_2.2.1 inline_0.3.15 ## [67] colorspace_1.4-1 rvest_0.3.5 knitr_1.28 haven_2.2.0 "],
["01_android_analysis.html", "Chapter: 1 android分析 1.1 ライブラリの準備 1.2 activityをダウンロード 1.3 activityの読み込み", " Chapter: 1 android分析 1.1 ライブラリの準備 pacman::p_loadを使うと、ライブラリをまとめて読み込んでくれます。また、インストールされていないライブラリがある場合は、インストールかつ読み込みを行ってくれます。 pacmanがインストールされていない場合は、コメントアウトしてインストールしてください。 # install.packages(pacman) pacman::p_load(tidyverse, jsonlite, patchwork, here, update = FALSE) 1.2 activityをダウンロード 1.3 activityの読み込み android &lt;- jsonlite::fromJSON(here(&quot;data/android_activity.json&quot;)) glimpse(android) ## Rows: 63,120 ## Columns: 5 ## $ header [3m[38;5;246m&lt;chr&gt;[39m[23m &quot;びよーんったー Pro&quot;, &quot;Nova Launcher ホーム&quot;, &quot;Gmail&quot;, &quot;Slack&quot;, &quot;Nova Launcher ホーム&quot;,... ## $ title [3m[38;5;246m&lt;chr&gt;[39m[23m &quot;使用: びよーんったー Pro&quot;, &quot;使用: Nova Launcher ホーム&quot;, &quot;使用: Gmail&quot;, &quot;使用: Slack&quot;, &quot;使用:... ## $ titleUrl [3m[38;5;246m&lt;chr&gt;[39m[23m &quot;https://play.google.com/store/apps/details?id=com.ABS104a.biyontterpro&quot;, ... ## $ time [3m[38;5;246m&lt;chr&gt;[39m[23m &quot;2020-04-16T21:29:57.048Z&quot;, &quot;2020-04-16T21:29:54.832Z&quot;, &quot;2020-04-16T21:29:... ## $ products [3m[38;5;246m&lt;list&gt;[39m[23m [&quot;Android&quot;, &quot;Android&quot;, &quot;Android&quot;, &quot;Android&quot;, &quot;Android&quot;, &quot;Android&quot;, &quot;Andro... android$time &lt;- parse_datetime(android$time,locale = locale(tz = &quot;Asia/Calcutta&quot;)) summary(android$time) ## Min. 1st Qu. Median Mean ## &quot;2016-12-29 13:27:55&quot; &quot;2019-01-14 08:13:33&quot; &quot;2019-06-18 09:47:04&quot; &quot;2019-06-11 07:30:44&quot; ## 3rd Qu. Max. ## &quot;2019-11-10 14:45:16&quot; &quot;2020-04-17 02:59:57&quot; android &lt;- android %&gt;% mutate(date = lubridate::date(time), year = lubridate::year(time)) android_latest &lt;- android %&gt;% filter(year %in% c(2019,2020)) android_latest &lt;- android_latest %&gt;% mutate(header = if_else(str_length(header) &gt;= 20, substr(header,1,20), header)) android &lt;- android %&gt;% mutate(header = if_else(str_length(header) &gt;= 20, substr(header,1,20), header)) android_latest %&gt;% count(header, sort = TRUE) %&gt;% head(5) %&gt;% mutate(header = fct_reorder(header, n)) %&gt;% ggplot() + geom_col(aes(y = header, x = n)) + theme_minimal() + labs(title = &quot;Most used Apps - Overall&quot;, subtitle = &quot;Android Smartphone usage&quot;, caption = &quot;Data:Google Takeout&quot;) android %&gt;% count(header, sort = TRUE) %&gt;% head(5) %&gt;% mutate(header = fct_reorder(header, n)) %&gt;% ggplot() + geom_col(aes(y = header, x = n)) + theme_minimal() + labs(title = &quot;Most used Apps - Overall&quot;, subtitle = &quot;Android Smartphone usage&quot;, caption = &quot;Data:Google Takeout&quot;) android_latest %&gt;% filter(year %in% &#39;2019&#39;) %&gt;% group_by(year, header) %&gt;% summarise(n = n()) %&gt;% arrange(desc(n)) %&gt;% head(5) %&gt;% #View() mutate(header = fct_reorder(header, n)) %&gt;% ggplot() + geom_col(aes(y = header, x = n)) + # facet_wrap(~year, scales = &quot;free&quot;) + theme_minimal() + labs(title = &quot;Most used Apps - 2019&quot;, subtitle = &quot;Android Smartphone usage&quot;, caption = &quot;Data:Google Takeout&quot;) -&gt; p2019 android_latest %&gt;% filter(year %in% &#39;2020&#39;) %&gt;% group_by(year, header) %&gt;% summarise(n = n()) %&gt;% arrange(desc(n)) %&gt;% head(5) %&gt;% #View() mutate(header = fct_reorder(header, n)) %&gt;% ggplot() + geom_col(aes(y = header, x = n)) + # facet_wrap(~year, scales = &quot;free&quot;) + theme_minimal() + labs(title = &quot;Most used Apps - 2020&quot;, subtitle = &quot;Android Smartphone usage&quot;, caption = &quot;Data:Google Takeout&quot;) -&gt; p2020 p2019 / p2020 android %&gt;% count(date) %&gt;% ggplot() + geom_line(aes(date,n)) "]
]
